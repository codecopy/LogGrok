using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Windows.Input;
using System.Windows;
using System.Windows.Controls;

using Nemerle.WPF;
using Xceed.Wpf.AvalonDock;

namespace LogGrok.Search.Behaviors
{
    public module CloseDocumentBehavior
    {
        [DependencyProperty(IsAttached, Metadata=PropertyMetadata(null, OnCommandChanged))]
        public GetCommand(dockingManager : DockingManager) : ICommand;
        
        public OnCommandChanged(d : DependencyObject, args : DependencyPropertyChangedEventArgs) : void 
        {
            def dockingManager = d :> DockingManager;
            match((args.OldValue, args.NewValue))
            {
                | (null, null) => ()
                | (null, _   ) => dockingManager.DocumentClosed += DocumentClosed(dockingManager, _, _)
                | (_   , null) => dockingManager.DocumentClosed -= DocumentClosed(dockingManager, _, _)
                | _ => ()
            }
        }
        
        private DocumentClosed(d : DockingManager, _ : object, args : DocumentClosedEventArgs) : void
        {
            GetCommand(d).Execute(args.Document.Content)
        }

    }
}
