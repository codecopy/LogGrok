using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;
using Nemerle.Assertions;

using System;
using System.Windows;
using System.Collections.Generic;
using System.Linq;

using LogGrok.Core;

namespace LogGrok.LogView
{
    public class TextColorizerService
    {
        public this ([NotNull] settings : TextColorizerSettings)
        {
            _settings = settings;
            SettingsChanged += (_, _) => { };
        }
        
        public LogRules[[NotNull] logType : string] : IEnumerable[ColorRule]
        {
            get { _settings.LogRules[logType] }
            set
            {
                _settings.LogRules[logType] = value;
                _settings.Save();
                SettingsChanged(this, EventArgs.Empty);
            }
        }
        
        public CreateTextColorizer([NotNull] logType : string) : TextColorizer
        {            
            def colorizer = TextColorizer(logType, _settings);
            WeakEventManager.[TextColorizerService, EventArgs].AddHandler(this, "SettingsChanged", colorizer.RaiseSettingsChanged);
            colorizer
        }

        public event SettingsChanged : EventHandler[EventArgs];
        
        _settings : TextColorizerSettings;
    }
}
