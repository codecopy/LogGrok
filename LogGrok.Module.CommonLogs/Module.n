using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

using Microsoft.Practices.Prism.Modularity;
using Microsoft.Practices.Unity;
using Microsoft.Practices.Prism.UnityExtensions;

using System.Threading;

using LogGrok.Core;

using LogGrok.Macros;

namespace LogGrok.Module.CommonLogs
{
     [Record]
    [Module(ModuleName="CommonLogs")]
    public class Module : IModule
    {
        public Initialize() : void 
        {
            def RegisterFactory[TFactory](logType : string, metaInformation : MetaInformation, priority : int)
            {
                _ = _container.RegisterInstance(logType, metaInformation);  
                _ = _container.RegisterType(typeof(ILogProcessorFactory), typeof(TFactory), logType, null, InjectionConstructor(priority, logType));
            }
            
            RegisterFactory.[MsiLogProcessorFactory]("Msi trace", MsiLogProcessorFactory.MetaInformation, 80);
            RegisterFactory.[GenericUtf8LogProcessorFactory](GenericUtf8LogProcessorFactory.MetaInformation.LogType, GenericUtf8LogProcessorFactory.MetaInformation, int.MinValue);
            RegisterFactory.[GenericUtf16LogProcessorFactory](GenericUtf16LogProcessorFactory.MetaInformation.LogType, GenericUtf16LogProcessorFactory.MetaInformation, int.MinValue);
            RegisterFactory.[VBLogProcessorFactory]("VB trace", VBLogProcessorFactory.MetaInformation, 80);
            RegisterFactory.[NLogLogProcessorFactory]("NLog trace", NLogLogProcessorFactory.MetaInformation, 80);
        }

        _container : IUnityContainer
    }
}
