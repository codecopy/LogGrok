using Nemerle;

using System;
using System.Linq;

using LogGrok.Core;

namespace LogGrok.IndexedFilter.Indexer
{
    [Record]
    public struct ByteKey : IEquatable[ByteKey]
    {
        public override GetHashCode() : int
        {
            unchecked
            {
                mutable result = 17;
                for (mutable i = 0; i < _data.Length ; i++)
                {
                    result = result * 31 + _data[i].GetHashCode();
                }
                result
            }
        }
        
        public Equals(otherKey : ByteKey) : bool
        {
            if (otherKey._data.Length != _data.Length)
                false
            else
            {
                mutable result = true;
                mutable i =0;
                def otherData = otherKey._data;
                while (i < _data.Length && result)
                {
                    result = _data[i].Equals(otherData[i]);
                    i ++;
                }
                result
            }
        }
        
        public GetComponent(i : int) : TextRange
        {
            _data[i]
        }
        
        private _data : array[TextRange];
    }
}
