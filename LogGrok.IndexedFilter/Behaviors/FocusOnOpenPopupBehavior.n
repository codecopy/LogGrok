using Nemerle;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Reflection;
using System.Text;
using System.Collections;
using System.Collections.Specialized;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Controls.Primitives;
using System.Windows.Data;
using System.Windows.Input;

using Nemerle.WPF;

namespace LogGrok.IndexedFilter.Behaviors
{
    public module FocusOnOpenPopupBehavior
    {        
        [DependencyProperty(IsAttached, Metadata=PropertyMetadata(null, DefaultFocusedElementChanged))]
        public GetDefaultFocusedElement(_ : Popup) : UIElement { get; set; }
        
        DefaultFocusedElementChanged(dependencyObject : DependencyObject, args : DependencyPropertyChangedEventArgs ) : void
        {
            def popup = dependencyObject :> Popup;
            def oldValue = args.OldValue :> UIElement;
            def newValue = args.NewValue :> UIElement;
            
            when (oldValue != null)
            {
                popup.Opened -= PopupOpened;
            }
            
            when (newValue != null)
            {
                popup.Opened += PopupOpened;
            }
        }
        
        PopupOpened(sender : Object, _ : EventArgs) : void
        {
            def popup = sender :> Popup; 
            def focusedElement = GetDefaultFocusedElement(popup);
         
            _ = focusedElement?.Focus();   
        }
        
    }
}
